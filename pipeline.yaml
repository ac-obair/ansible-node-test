trigger:
  branches:
    include:
      - main
  paths:
    include:
      - "*"
pr:
  branches:
    include: 
      - main
  paths:
    include:
      - "*"

pool:
  vmImage: "ubuntu-18.04"

stages:
  - stage: "ansible_runtime_environ"
    displayName: "prepare_environ"
    jobs:
      - job: "dependencies"
        displayName: "installing dependencies"
        pool: "Azure Self-Hosted"
        steps:
          - task: CopyFilesOverSSH@0
            displayName: "copy requirements file"
            inputs:
              sshEndpoint: "rdp03-ansible-agent-ssh-service-connection"
              contents: "requirements.txt \n test.yaml"
              targetFolder: "azure_pipelines/ansible-node-test"
              readyTimeout: "20000"
              failOnEmptySource: true
          - task: SSH@0
            displayName: "pip install"
            inputs:
              sshEndpoint: "rdp03-ansible-agent-ssh-service-connection"
              runOptions: "commands"
              commands: "pip install --user --no-warn-script-location --disable-pip-version-check -r azure_pipelines/ansible-node-test/requirements.txt"
              readyTimeout: "20000"
          - task: SSH@0
            displayName: "testing playbook"
            inputs:
              sshEndpoint: "rdp03-ansible-agent-ssh-service-connection"
              runOptions: "commands"
              commands: "ansible-playbook azure_pipelines/ansible-node-test/test.yaml"
              readyTimeout: "20000"

  - stage: "ansible_runtime_testing"
    displayName: "static_analysis"
    jobs:
      - job: "linting"
        displayName: "lint and syntax check"
        steps:
          - task: Bash@3
            displayName: "molecule"
            inputs:
              targetType: "inline"
              script: |
                echo "hello, world! from molecule test"

  - stage: "ansible_runtime_checking"
    displayName: "check_mode"
    jobs:
      - job: "checking"
        displayName: "playbook dry-run"
        pool: "Azure Self-Hosted"
        steps:
          - task: Ansible@0
            displayName: "ansible-playbook -CD"
            env:
              ANSIBLE_FORCE_COLOR: true
              ANSIBLE_NOCOLOR: false
            inputs:
              ansibleInterface: "remoteMachine"
              connectionOverSsh: "rdp03-ansible-agent-ssh-service-connection"
              playbookSourceRemoteMachine: "agentMachine"
              playbookRootRemoteMachine: "$(System.DefaultWorkingDirectory)"
              playbookPathLinkedArtifactOnRemoteMachine: "nginx-configs.yaml"
              inventoriesRemoteMachine: "file"
              inventoryFileSourceRemoteMachine: "agentMachine"
              inventoryFileLinkedArtifactOnRemoteMachine: "dev/inventory"
              args: "-CD --tags gearbox --limit iweb2.arnoldclark.com"

  - stage: "ansible_runtime_provisioning"
    displayName: "applying_changes"
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    jobs:
      - job: "deploying"
        displayName: "playbook rollout"
        pool: "Azure Self-Hosted"
        steps:
          - task: Bash@3
            displayName: "ansible-playbook"
            inputs:
              targetType: "inline"
              script: |
                echo "hello, world! from ansible-playbook"