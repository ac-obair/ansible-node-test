---
parameters:
  - name: service_connection
    default: rdp03-ansible-agent-ssh-service-connection
  - name: pipeline

jobs:
  - job: "files"
    displayName: "copy files to ACS"
    pool: "Azure Self-Hosted"
    steps:
      # get the name of branch after /. -> ticket/branch_name
      - bash: |
          BRANCH_NAME=$(basename $(System.PullRequest.SourceBranch))
          echo "##vso[task.setvariable variable=branch_name]$BRANCH_NAME"
          echo $(branch_name)
      - task: CopyFilesOverSSH@0
        displayName: "copying"
        inputs:
          sshEndpoint: ${{ parameters.service_connection }}
          contents: "**"
          targetFolder: "azure_pipelines/${{ parameters.pipeline }}"
          readyTimeout: "20000"
          cleanTargetFolder: true
          failOnEmptySource: true
  - job: "environment"
    displayName: "create environment"
    pool: "Azure Self-Hosted"
    dependsOn: "files"
    steps:
      - task: SSH@0
        displayName: "create virtual environment"
        inputs:
          sshEndpoint: ${{ parameters.service_connection }}
          runOptions: "inline"
          # this inline script will create a venv of <pipeline_name>-<branch_name>
          inline: |
            pyenv virtualenvs --bare | grep ${{ parameters.pipeline }}-$(branch_name) && pyenv virtualenv-delete -f ${{ parameters.pipeline }}-$(branch_name)
            pyenv virtualenv -f ${{ parameters.pipeline }}-$(branch_name)
            cd azure_pipelines/${{ parameters.pipeline }}
            pyenv local ${{ parameters.pipeline }}-$(branch_name)
          readyTimeout: "20000"
  - job: "dependencies"
    displayName: "installing dependencies"
    pool: "Azure Self-Hosted"
    dependsOn: "environment"
    steps:
      - task: SSH@0
        continueOnError: true
        displayName: "install pip requirements"
        inputs:
          sshEndpoint: ${{ parameters.service_connection }}
          runOptions: "inline"
          inline: |
            cd azure_pipelines/${{ parameters.pipeline }}
            pip install --no-warn-script-location --disable-pip-version-check -r requirements.txt
          readyTimeout: "20000"
      - task: SSH@0
        displayName: "install collection requirements"
        inputs:
          sshEndpoint: ${{ parameters.service_connection }}
          runOptions: "inline"
          # collections are -f installed to update any version change
          inline: |
            cd azure_pipelines/${{ parameters.pipeline }}
            ansible-galaxy collection install -r collections.yml -f
          readyTimeout: "20000"
